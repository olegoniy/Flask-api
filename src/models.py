from app import db
from sqlalchemy.dialects.mysql import TINYINT
from sqlalchemy.types import Float


class Tickets(db.Model):
	__tablename__ = "tickets"
	id = db.Column(db.Integer, primary_key=True)
	_canupdate = db.Column(TINYINT(1))
	acctmaninformedsurvey = db.Column(TINYINT(1))
	actisbillabledefault = db.Column(TINYINT(1))
	addressfrom = db.Column(db.String(50))
	agent_id = db.Column(db.Integer)
	agreedcleared = db.Column(TINYINT(1))
	alluserscanview = db.Column(db.Integer)
	appointment_count = db.Column(db.Integer)
	appointment_type = db.Column(db.Integer)
	approval_process_step_name = db.Column(db.String(50))
	article_type = db.Column(db.Integer)
	atera_alert_id = db.Column(db.Integer)
	attachment_count = db.Column(db.Integer)
	auditdate = db.Column(db.String(50))
	auditstatus = db.Column(db.Integer)
	auditunum = db.Column(db.Integer)
	automate_id = db.Column(db.Integer)
	autotask_id = db.Column(db.Integer)
	autotask_number = db.Column(db.String(50))
	auvik_id = db.Column(db.String(50))
	auvik_url = db.Column(db.String(50))
	azure_tenants_name = db.Column(db.String(50))
	backoutplan = db.Column(db.String(50))
	budgettype_id = db.Column(db.Integer)
	canbechild = db.Column(TINYINT(1))
	canbevotedfor = db.Column(TINYINT(1))
	category_1 = db.Column(db.String(50))
	category_2 = db.Column(db.String(50))
	category_3 = db.Column(db.String(50))
	category_4 = db.Column(db.String(50))
	changeinformation_html = db.Column(db.String(50))
	changeseq = db.Column(db.Integer)
	chargerate = db.Column(db.Integer)
	child_count = db.Column(db.Integer)
	client_id = db.Column(db.Integer)
	client_name = db.Column(db.String(50))
	communicationplan = db.Column(db.String(50))
	component_id = db.Column(db.Integer)
	connectwise_id = db.Column(db.Integer)
	connectwise_project_id = db.Column(db.Integer)
	contract_id = db.Column(db.Integer)
	cost = db.Column(db.Integer)
	createdfrom_id = db.Column(db.Integer)
	currency = db.Column(db.Integer)
	customfields = db.Column()
	datecreated = db.Column(db.String(50))
	dateoccurred = db.Column(db.String(50))
	deadlinedate = db.Column(db.String(50))
	deadlinenotificationhours = db.Column(db.Integer)
	deleted = db.Column(TINYINT(1))
	department_id = db.Column(db.Integer)
	details = db.Column(db.String(200))
	details_html = db.Column(db.String(200))
	development = db.Column(TINYINT(1))
	devops_agent = db.Column(db.String(50))
	devops_comment_count = db.Column(db.Integer)
	devops_workitem_count = db.Column(db.Integer)
	email_end_tag_override = db.Column(db.String(200))
	email_start_tag_override = db.Column(db.String(200))
	enduserstatus = db.Column(db.Integer)
	estimate = db.Column(db.Integer)
	estimatedays = db.Column(db.Integer)
	excludefromsla = db.Column(TINYINT(1))
	expenses = db.Column()
	external_links = db.Column()
	faultapprovalfailed = db.Column(TINYINT(1))
	fixbydate = db.Column(db.String(50))
	flagged = db.Column(TINYINT(1))
	flastupdate = db.Column(db.String(50))
	follower_count = db.Column(db.Integer)
	forwardinboundupdates = db.Column(TINYINT(1))
	freshdesk_id = db.Column(db.Integer)
	has_related = db.Column(TINYINT(1))
	hdid = db.Column(db.Integer)
	ignore_kb_match = db.Column(TINYINT(1))
	impact = db.Column(db.Integer)
	impactdescription = db.Column(db.String(200))
	impactlevel = db.Column(db.Integer)
	inactive = db.Column(TINYINT(1))
	inform3rdpartysystem = db.Column(TINYINT(1))
	invoice_line_count = db.Column(db.Integer)
	is_opportunity = db.Column(TINYINT(1))
	is_project = db.Column(TINYINT(1))
	isbillable = db.Column(TINYINT(1))
	isimportantcontact = db.Column(TINYINT(1))
	items_issued_count = db.Column(db.Integer)
	itil_requesttype_id = db.Column(db.Integer)
	jira_issue_count = db.Column(db.Integer)
	knownerror = db.Column(TINYINT(1))
	lastactiondate = db.Column(db.String(50))
	lastincomingemail = db.Column(db.String(50))
	laststatuschangeinformed = db.Column(db.Integer)
	laststatuschangeinformedmanager = db.Column(db.Integer)
	laststatuschangestatus = db.Column(db.Integer)
	laststatuschangestatusdate = db.Column(db.String(50))
	locked = db.Column(TINYINT(1))
	loggedoutofhdworkinghours = db.Column(TINYINT(1))
	mailboxid = db.Column(db.Integer)
	mailentryid = db.Column(db.String(50))
	matched_kb_id = db.Column(db.Integer)
	matched_rule_id = db.Column(db.Integer)
	meraki_alert_type = db.Column(db.String(50))
	meraki_device = db.Column(db.String(50))
	merged_into_id = db.Column(db.Integer)
	messsent = db.Column(db.String(50))
	messsentlast = db.Column(db.String(50))
	ncentral_details_id = db.Column(db.Integer)
	newaction_emailfrom = db.Column(db.Integer)
	ninja_alert_id = db.Column(db.String(50))
	notuseful_count = db.Column(db.Integer)
	onhold = db.Column(TINYINT(1))
	open_chat_count = db.Column(db.Integer)
	opp_region_name = db.Column(db.String(50))
	oppcountry = db.Column(db.String(50))
	oppdontaddtomailinglist = db.Column(TINYINT(1))
	oppregion = db.Column(db.String(50))
	oppvalueadjusted = db.Column(db.Integer)
	organisation_id = db.Column(db.Integer)
	orionacknowledgedate = db.Column(db.String(50))
	orionacknowledgedby = db.Column(db.Integer)
	orionacknowledgenote = db.Column(db.String(50))
	orionacknowledgestate = db.Column(db.Integer)
	orionalertactiveid = db.Column(db.Integer)
	orionalertid = db.Column(db.Integer)
	orionalertname = db.Column(db.String(50))
	orionclosestate = db.Column(db.Integer)
	pagerdutyeragent = db.Column(db.Integer)
	pagerdutyid = db.Column(db.String(50))
	pagerdutyincidentidstring = db.Column(db.String(50))
	pagerdutystatus = db.Column(db.Integer)
	phonenumber = db.Column(db.String(50))
	phonenumberfrom = db.Column(db.String(50))
	powershell_script_count = db.Column(db.Integer)
	priority_id = db.Column(db.Integer, ForeignKey("priority.priorityid"))
	product_id = db.Column(db.Integer)
	product_name = db.Column(db.String(50))
	projectconsignmentdetailid = db.Column(db.Integer)
	projectconsignmentheaderid = db.Column(db.Integer)
	projectinternaltask = db.Column(TINYINT(1))
	purchaseorder_count = db.Column(db.Integer)
	quantity = db.Column(db.Integer)
	quotation_count = db.Column(db.Integer)
	read = db.Column(TINYINT(1))
	reference = db.Column(db.String(50))
	release2_id = db.Column(db.Integer)
	release3_id = db.Column(db.Integer)
	release_id = db.Column(db.Integer)
	release_important = db.Column(TINYINT(1))
	releasenotegroup_id = db.Column(db.Integer)
	resource_booking_type = db.Column(db.Integer)
	resourcetype_id = db.Column(db.Integer)
	respondbydate = db.Column(db.String(50))
	reviewed = db.Column(TINYINT(1))
	riskdescription = db.Column(db.String(200))
	risklevel = db.Column(db.Integer)
	salesorder_count = db.Column(db.Integer)
	scomalertstate = db.Column(db.Integer)
	section_timezone = db.Column(db.String(50))
	sendprintrequest = db.Column(db.Integer)
	service_count = db.Column(db.Integer)
	servicefailurestid = db.Column(db.Integer)
	servicenow_id = db.Column(db.String(50))
	servicenow_number = db.Column(db.String(50))
	servicestatusnote = db.Column(db.String(50))
	showforusers = db.Column(TINYINT(1))
	showonroadmap = db.Column(TINYINT(1))
	site_id = db.Column(db.Integer)
	site_name = db.Column(db.String(50))
	site_sla_id = db.Column(db.Integer)
	site_timezone = db.Column(db.String(50))
	sla_id = db.Column(db.Integer)
	sla_name = db.Column(db.String(50))
	slaactiondate = db.Column(db.String(50))
	slaholdtime = db.Column(db.Integer)
	slapercused = db.Column(Float)
	slatimeleft = db.Column(Float)
	source = db.Column(db.Integer)
	splunkoncall_id = db.Column(db.String(50))
	splunkoncallstatus = db.Column(db.Integer)
	splunkoncallurl = db.Column(db.String(50))
	starttime = db.Column(db.String(50))
	starttimeslot = db.Column(db.Integer)
	status_id = db.Column(db.Integer)
	summary = db.Column(db.String(50))
	supplier_breachfixbysent = db.Column(TINYINT(1))
	supplier_breachrespsent = db.Column(TINYINT(1))
	supplier_contract_id = db.Column(db.Integer)
	supplier_name = db.Column(db.String(50))
	supplier_status = db.Column(db.Integer)
	surveyneeded = db.Column(TINYINT(1))
	surveysent = db.Column(TINYINT(1))
	sync_to_salesforce = db.Column(TINYINT(1))
	takenby = db.Column(db.String(50))
	targetdate = db.Column(db.String(50))
	targettime = db.Column(db.String(50))
	targettimeslot = db.Column(db.Integer)
	task_count = db.Column(db.Integer)
	team = db.Column(db.String(50))
	team_department_id = db.Column(db.Integer)
	team_id = db.Column(db.Integer)
	testplan = db.Column(db.String(50))
	ticket_tags = db.Column(db.String(50))
	ticketage = db.Column(Float)
	tickettype_id = db.Column(db.Integer)
	timetaken = db.Column(db.Integer)
	timezonename = db.Column(db.String(50))
	todo_count = db.Column(db.Integer)
	top_level_id = db.Column(db.Integer)
	updateservicestatus = db.Column(TINYINT(1))
	urgency = db.Column(db.Integer)
	use = db.Column(db.String(50))
	useful_count = db.Column(db.Integer)
	user_id = db.Column(db.Integer)
	user_name = db.Column(db.String(50))
	userdef1 = db.Column(db.String(50))
	userdef2 = db.Column(db.String(50))
	userdef3 = db.Column(db.String(50))
	userdef4 = db.Column(db.String(50))
	userdef5 = db.Column(db.String(50))
	version_id = db.Column(db.Integer)
	visible_child_tickets = db.Column(db.Integer)
	who = db.Column(db.String(50))
	workflow_id = db.Column(db.Integer)
	workflow_name = db.Column(db.String(50))
	workflow_seq = db.Column(db.Integer)
	workflow_step = db.Column(db.Integer)
	workflow_stepstarted = (db.String(50))
	your_vote = db.Column(db.Integer)

	def __repr__(self):
		return "<Tickets {}>".format(self.id)


class Priority(db.Model):
	__tablename__ = "priority"
	catprompt = db.Column(db.Integer)
	colour = db.Column(db.String(50))
	enterslaexcuse = db.Column(TINYINT(1))
	fixendofday = db.Column(TINYINT(1))
	fixtime = db.Column(db.Integer)
	fixunits = db.Column(db.String(50))
	id = db.Column(db.String(50))
	ishidden = db.Column(TINYINT(1))
	name = db.Column(db.String(50))
	priorityid = id = db.Column(db.Integer, primary_key=True)
	responseendofday = db.Column(TINYINT(1))
	responsestartofday = db.Column(TINYINT(1))
	responsestartofdaytime = db.Column(db.String(50))
	responsetime = db.Column(db.Integer)
	responseunits = db.Column(db.String(50))
	setfixtostartdate = db.Column(TINYINT(1))
	setfixtotargetdate = db.Column(TINYINT(1))
	slaid = db.Column(db.Integer)
	startofday = db.Column(TINYINT(1))
	startofdaytime = db.Column(db.String(50))
	workdaysoverride = db.Column(db.Integer)

class tickettype(db.Model):
	__tablename__ = "tickettype"
	access_control_level = db.Column(db.Integer)
	acknowledgementtemplate = db.Column(db.Integer)
	acknowledgementtemplateooh = db.Column(db.Integer)
	addactionstolinked = db.Column(db.Integer)
	addnoteonlytolinked = db.Column(TINYINT(1))
	adduserupdatestochildren = db.Column(TINYINT(1))
	agentresourcebookingtype = db.Column(db.Integer)
	agentscanselect = db.Column(TINYINT(1))
	allowall_actions = db.Column(TINYINT(1))
	allowall_appointment_types = db.Column(TINYINT(1))
	allowall_category1 = db.Column(TINYINT(1))
	allowall_category2 = db.Column(TINYINT(1))
	allowall_category3 = db.Column(TINYINT(1))
	allowall_category4 = db.Column(TINYINT(1))
	allowall_status = db.Column(TINYINT(1))
	allowattachments = db.Column(TINYINT(1))
	allowcustomiseunborn = db.Column(TINYINT(1))
	allowlogonbehalfof = db.Column(db.Integer)
	allowtickettypetobechild = db.Column(TINYINT(1))
	alluserscanview = db.Column(db.Integer)
	alluserscanviewit = db.Column(TINYINT(1))
	always_bcc = db.Column(db.String(50))
	anonymouscanselect = db.Column(TINYINT(1))
	applydefaultsontypechangebool = db.Column(TINYINT(1))
	appointmentdefaultbody = db.Column(db.Integer)
	approval_process_id = db.Column(db.Integer)
	attendeesenduser = db.Column(db.Integer)
	autoCloseHours = db.Column(db.Integer)
	auto_delete_data = db.Column(db.Integer)
	auto_respond_logged_manually = db.Column(db.Integer)
	chargerate = db.Column(db.Integer)
	childticketcolumnsoverride = db.Column(db.Integer)
	close_kb_action = db.Column(db.Integer)
	closedrequestreplylimit = db.Column(db.Integer)
	closedrequestsemailid = db.Column(db.Integer)
	closedrequestswithupdates = db.Column(db.Integer)
	closedrequestswithupdatesincpending = db.Column(TINYINT(1))
	closeduserupdatehours = db.Column(db.Integer)
	copyattachmentstochild = db.Column(TINYINT(1))
	database_lookup_id = db.Column(db.Integer)
	default_agent = db.Column(db.Integer)
	default_appointment_details = db.Column(db.String(50))
	default_appointment_summary = db.Column(db.String(50))
	default_backoutplan = db.Column(db.String(50))
	default_budgettype_id = db.Column(db.Integer)
	default_category_1 = db.Column(db.String(50))
	default_category_2 = db.Column(db.String(50))
	default_category_3 = db.Column(db.String(50))
	default_category_4 = db.Column(db.String(50))
	default_changeinformation_html = db.Column(db.String(50))
	default_communicationplan = db.Column(db.String(50))
	default_details = db.Column(db.String(50))
	default_details_html = db.Column(db.String(50))
	default_estimate = db.Column(db.Integer)
	default_excludefromsla = db.Column(TINYINT(1))
	default_impact = db.Column(db.Integer)
	default_impactdescription = db.Column(db.String(50))
	default_justification = db.Column(db.String(50))
	default_matchedkbid = db.Column(db.Integer)
	default_priority = db.Column(db.Integer)
	default_product_id = db.Column(db.Integer)
	default_risklevel = db.Column(db.Integer)
	default_riskleveldescription = db.Column(db.String(50))



class Customers(db.Model):
	__tablename__ = "customers"
	id = db.Column(db.Integer, primary_key=True)
	name = db.Column(db.String(25), unique=True)
	email = db.Column(db.String(80), unique=True)
	psw = db.Column(db.String(80))

	def __repr__(self):
		return "<Customer {}>".format(self.id)
